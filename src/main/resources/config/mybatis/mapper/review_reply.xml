<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="review_reply">

	<!-- 댓글목록 -->
	<select id="review_reply_list" resultType="vo.ReviewReplyVo">
		select * from review_reply_view order by review_reply_ref desc,review_reply_step asc
	</select>
	
	
	
	<!--전체 조회  -->
	<select id="review_reply_list_paging" parameterType="java.util.Map" resultType="vo.ReviewReplyVo">
		select * from 
		(
			select
				r.*,
				rank() over (order by review_reply_ref desc,review_reply_step asc) no,
				(select count(review_reply_idx) from REVIEW_REPLY_LIKE where r.review_reply_idx=review_reply_idx) cnt,
   				(select count(review_reply_idx) from REVIEW_REPLY_LIKE where r.review_reply_idx=review_reply_idx and mem_idx=#{m_idx}) heart_flag
			from(select * from review_reply_view where review_idx=#{review_idx}) r
		)
		where no between #{start} and #{end}
	</select>

	<!--미영 /mem_idx에 해당하는 리뷰댓글 리스트    -->
	<select id="review_reply_mem_list" parameterType="java.util.Map" resultType="vo.ReviewReplyVo">
		select * from
		(
		   select
		      rr.*,
		      rank() over(order by review_reply_idx desc) no
		   from  (select * from review_reply where mem_idx=#{mem_idx}) rr
		)
		where no between #{start} and #{end}
			
	</select>
	
	

	<!-- 댓글작성 -->
	<insert id="review_reply_insert" parameterType ="vo.ReviewReplyVo">
		insert into review_reply values(seq_review_reply_idx.nextVal,
										#{mem_idx}, 
										#{mem_nickname},
										#{review_idx},
										#{review_reply_content},
										seq_review_reply_idx.currVal,
										0,
										0,
										sysdate,
										#{review_reply_ip}
										)
	</insert>


	<!-- 댓글삭제 -->
	<delete id="review_reply_delete" parameterType="int">
		delete from review_reply where review_reply_idx=#{review_reply_idx}
	</delete>



	<!-- 레코드 한개 추출 -->
	<select id="review_reply_one" parameterType="int" resultType="vo.ReviewReplyVo">
		select * from review_reply where review_reply_idx=#{review_reply_idx}
	</select>
	
	<!-- 동일한 그룹글중에서 기준글보다 step이 큰게시물의 step을 증가 -->
   	<update id="review_reply_step"  parameterType="vo.ReviewReplyVo">
        update review_reply
              set review_reply_step = review_reply_step + 1
        where review_reply_ref=#{ review_reply_ref}  and  review_reply_step > #{ review_reply_step }      
   	</update>
	
	
	<!-- 답글쓰기 -->
   <insert id="review_reply_re" parameterType="vo.ReviewReplyVo">
       insert into review_reply values(seq_review_reply_idx.nextVal,
										#{mem_idx}, 
										#{mem_nickname},
										#{review_idx},
										#{review_reply_content},
										#{review_reply_ref},
										#{review_reply_step},
										#{review_reply_depth},
										sysdate,
										#{review_reply_ip}
										)
   </insert>
   
   
   
   <!-- 전체 댓글 수 구하기 -->
   <select id="review_reply_row_total"	resultType="int">
 		select nvl(count(*),0) from review_reply
   </select>
   
   <!--   게시글 추천 시 REPLY_Like 테이블에 insert   -->
<insert id="review_reply_insertlike" parameterType="vo.ReviewReplyVo"> 
insert into review_reply_like values(seq_review_reply_like_idx.nextVal,#{mem_idx},#{review_reply_idx},1) 
</insert>
<!--   게시글 추천취소 시 REPLY_Like 테이블에서 삭제    -->
<delete id="review_reply_deletelike" parameterType="vo.ReviewReplyVo"> 
delete from review_reply_like where review_reply_idx=#{review_reply_idx} and mem_idx=#{mem_idx} 
</delete>
</mapper>













<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member">

<!--m_idx 1건 조회  -->
<select id="member_one_mem_idx" parameterType="int" resultType="vo.MemberVo">
   select * from member where mem_idx=#{mem_idx}
</select>
<!--mem_email 1건 조회  -->
<select id="member_one_mem_email" parameterType="String" resultType="vo.MemberVo">
   select * from member where mem_email=#{mem_email}
</select>
<!--mem_nickname중복확인  -->
<select id="member_one_mem_nickname" parameterType="String" resultType="vo.MemberVo">
   select * from member where mem_nickname=#{mem_nickname}
</select>

<!--insert  -->
<insert id="member_insert" parameterType="vo.MemberVo">
   insert into member values(seq_member_mem_idx.nextVal,
                       #{ grade_idx},                           
                              #{ mem_email },
                              #{ mem_pwd },
                              #{ mem_nickname },
                              #{ mem_birth },
                               sysdate,
                              #{ mem_pic_filename },
                              #{ mem_profile},
                              #{ mem_status}
                             )
</insert>

 <!-- delete -->
  <delete id="member_delete" parameterType="int">
     delete from member where mem_idx=#{ mem_idx }
  </delete>

 <!--회원  update -->
 
  <update id="member_update" parameterType="vo.MemberVo">
      update member 
             set 
                
                 mem_pwd=#{ mem_pwd },           
                 mem_profile=#{mem_profile}
                      where mem_idx=#{ mem_idx }
  </update>

  <update id="photo_upload" parameterType="vo.MemberVo">
      update member 
             set 
                 mem_pic_filename=#{mem_pic_filename}
                      where mem_idx=#{ mem_idx }
  </update>


  <update id="member_out" parameterType="vo.MemberVo">
     update member 
           set
              mem_status=#{mem_status}
                 where mem_idx=#{mem_idx}
  </update>





   <!--admin페이지에서 사용  -->
  <update id="member_amd_update" parameterType="vo.MemberVo">
      update member 
             set 
                 mem_grade=#{mem_grade},
                 mem_status=#{mem_status}
                   where mem_idx=#{ mem_idx }
  </update>






<!-- mem_idx가 좋아요 수 체크    --> 
<select id="member_like_count" parameterType="int" resultType="int">
  select sum(count) from         
  (
     select count(*) as count from review_like where  mem_idx=#{mem_idx}
     union all      
     select count(*) as count from market_like where  mem_idx=#{mem_idx}
     union all           
     select count(*) as count from carpool_like where  mem_idx=#{mem_idx}
  )       
    


</select>

<!-- mem_idx가 작성한 댓글 수 체크  --> 
<select id="member_reply_count" parameterType="int" resultType="int">
  select sum(count) from         
  (
     select count(*) as count from review_reply where  mem_idx=#{mem_idx}
     union all      
     select count(*) as count from market_reply where  mem_idx=#{mem_idx}
     union all           
     select count(*) as count from carpool_reply where  mem_idx=#{mem_idx}
  )  
  


</select>

<!-- mem_idx가 작성한 게시물 수 체크  --> 
<select id="member_category_count" parameterType="int" resultType="int">
  select sum(count) from         
  (
     select count(*) as count from review where  mem_idx=#{mem_idx}
     union all      
     select count(*) as count from market where  mem_idx=#{mem_idx}
     union all           
     select count(*) as count from carpool where  mem_idx=#{mem_idx}
  )  
  

</select>

<!-- mem_idx가 작성한 댓글수체크  --> 
<select id="member_reply_like_count" parameterType="int" resultType="int">
   select sum(count) from         
  (
     select count(*) as count from review_reply_like where  mem_idx=#{mem_idx}
     union all      
     select count(*) as count from market_reply_like where  mem_idx=#{mem_idx}
     union all           
     select count(*) as count from carpool_reply_like where  mem_idx=#{mem_idx}
  )  
  
</select>


<!-- 페이징 검색 -->


<!--전체 조회  -->
<select id="member_mypage_adm" resultType="vo.MemberVo">
   select m.* ,
	  	 from
	    (select * from MEMBER) m order by mem_no desc
</select>



<!-- 페이징처리를 위한 조회 -->
	<select id="member_condition_list" parameterType="java.util.Map" resultType="vo.MemberVo">
	select * from
	(
		select 
			m.*,
			rank() over(order by mem_idx desc) mem_no
		from
			(select * from member
				<trim prefix="where" prefixOverrides="or">
					<if test="grade_idx!=null">
						grade_idx like '%' || #{ grade_idx } || '%'
					</if>			

					<if test="mem_regdate!=null">
						or mem_regdate like '%' || #{ mem_regdate } || '%'
					</if>			
				</trim>
			
			) m
	)	
		where mem_no between #{ start } and #{ end }
	</select>

	 <!-- 전체게시물수 구하기 -->
	<select id="member_row_total" resultType="int">
		select nvl(count(*),0) from member
	</select>

	<!-- 검색 조건별 게시물수 구하기 -->
	<select id="member_condition_row_total" parameterType="java.util.Map" resultType="int">
		select nvl(count(*),0) from member
		<trim prefix="where" prefixOverrides="or">
					<if test="grade_idx != null">
						grade_idx like '%' || #{ grade_idx } || '%'
					</if>			

					<if test="mem_regdate!= null">
						or mem_regdate like '%' || #{ mem_regdate } || '%'
					</if>			
	
		</trim>
	</select>
<!--  관리자가 강퇴(휴면계정으로전환)시킬때  -->
<update id="member_getout" parameterType="vo.MemberVo"> 
update member set mem_status=0 where mem_idx=#{mem_idx} 
</update>

<!--  관리자가 다른 회원 관리자로 등업시킬때  -->
<update id="member_admin" parameterType="vo.MemberVo"> 
update member set grade_idx=5 where mem_idx=#{mem_idx} 
</update>

<!--  브론즈가 실버로 자동등업  -->
<update id="member_to_silver" parameterType="vo.MemberVo"> 
update member set grade_idx=2 where mem_idx=#{mem_idx} 
</update>

<!--  실버가 골드로 자동등업  -->
<update id="member_to_gold" parameterType="vo.MemberVo"> 
update member set grade_idx=3 where mem_idx=#{mem_idx} 
</update>

<!--  골드가 플레티넘으로 자동등업  -->
<update id="member_to_ple" parameterType="vo.MemberVo"> 
update member set grade_idx=4 where mem_idx=#{mem_idx} 
</update>


</mapper>











